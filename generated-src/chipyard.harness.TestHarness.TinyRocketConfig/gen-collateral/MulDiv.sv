// Generated by CIRCT firtool-1.75.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module MulDiv(	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
  input         clock,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
  input         reset,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
  output        io_req_ready,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input         io_req_valid,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input  [4:0]  io_req_bits_fn,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input  [31:0] io_req_bits_in1,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input  [31:0] io_req_bits_in2,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input  [4:0]  io_req_bits_tag,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input         io_kill,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  input         io_resp_ready,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  output        io_resp_valid,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  output [31:0] io_resp_bits_data,	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
  output [4:0]  io_resp_bits_tag	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:45:14]
);

  reg  [2:0]  state;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:51:22]
  reg  [4:0]  req_tag;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:53:16]
  reg  [5:0]  count;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18]
  reg         neg_out;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:57:20]
  reg         isHi;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:58:17]
  reg         resHi;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:59:18]
  reg  [32:0] divisor;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20]
  reg  [65:0] remainder;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:61:22]
  wire [31:0] result = resHi ? remainder[64:33] : remainder[31:0];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:59:18, :61:22, :89:{19,36,57}]
  wire        io_resp_valid_0 = state == 3'h6 | (&state);	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :182:{27,42,51}]
  wire        io_req_ready_0 = state == 3'h0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :183:25]
  wire [40:0] _prod_T_4 = {{33{remainder[32]}}, remainder[7:0]} * {{8{divisor[32]}}, divisor} + {{8{remainder[65]}}, remainder[65:33]};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20, :61:22, :107:31, :108:31, :109:24, :112:{38,67,76}]
  wire [2:0]  decoded_invInputs = ~(io_req_bits_fn[2:0]);	// @[src/main/scala/chisel3/util/experimental/decode/decoder.scala:35:16, src/main/scala/chisel3/util/pla.scala:78:21]
  wire [1:0]  _decoded_andMatrixOutputs_T = {decoded_invInputs[1], decoded_invInputs[2]};	// @[src/main/scala/chisel3/util/pla.scala:78:21, :91:29, :98:53]
  wire [1:0]  _decoded_orMatrixOutputs_T_4 = {&{io_req_bits_fn[0], decoded_invInputs[2]}, io_req_bits_fn[1]};	// @[src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:{53,70}, :114:19]
  wire        lhs_sign = (|{decoded_invInputs[0], &_decoded_andMatrixOutputs_T}) & io_req_bits_in1[31];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:81:{23,48}, src/main/scala/chisel3/util/pla.scala:78:21, :91:29, :98:{53,70}, :114:{19,36}]
  wire        rhs_sign = (|{&_decoded_andMatrixOutputs_T, &{decoded_invInputs[0], io_req_bits_fn[2]}}) & io_req_bits_in2[31];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:81:{23,48}, src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:{53,70}, :114:{19,36}]
  wire [32:0] _subtractor_T_1 = remainder[64:32] - divisor;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20, :61:22, :88:{29,37}]
  wire        _GEN = state == 3'h1;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :92:39]
  wire        _GEN_0 = state == 3'h5;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :101:39]
  wire        _GEN_1 = state == 3'h2;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :106:39]
  wire        _GEN_2 = _GEN_1 & count == 6'h3;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :101:57, :106:{39,50}, :124:{25,55}, :125:13]
  wire        _GEN_3 = state == 3'h3;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :129:39]
  wire        _GEN_4 = count == 6'h20;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :138:17]
  wire        _GEN_5 = io_req_ready_0 & io_req_valid;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:183:25, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  always @(posedge clock) begin	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
    if (reset)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
      state <= 3'h0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22]
    else if (_GEN_5)	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
      state <= decoded_invInputs[2] ? 3'h2 : {1'h0, ~(lhs_sign | rhs_sign), 1'h1};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22, :81:23, :165:{17,36,46}, src/main/scala/chisel3/util/pla.scala:78:21, :91:29]
    else if (io_resp_ready & io_resp_valid_0 | io_kill)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:161:22, :182:42, src/main/scala/chisel3/util/Decoupled.scala:51:35]
      state <= 3'h0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22]
    else if (_GEN_3 & _GEN_4)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:106:50, :129:{39,50}, :138:{17,42}, :139:13]
      state <= {1'h1, ~neg_out, 1'h1};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:51:22, :57:20, :139:19]
    else if (_GEN_2)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:101:57, :106:50, :124:55, :125:13]
      state <= 3'h6;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22]
    else if (_GEN_0)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:101:39]
      state <= 3'h7;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:51:22]
    else if (_GEN)	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:92:39]
      state <= 3'h3;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22]
    if (_GEN_5) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
      req_tag <= io_req_bits_tag;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:53:16]
      count <= 6'h0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18]
      isHi <= |_decoded_orMatrixOutputs_T_4;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:58:17, src/main/scala/chisel3/util/pla.scala:114:{19,36}]
      divisor <= {rhs_sign, io_req_bits_in2};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20, :81:23, :170:19]
      remainder <= {34'h0, io_req_bits_in1};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:61:22, :94:17, :171:15]
    end
    else begin	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
      if (_GEN_3) begin	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:129:39]
        count <= count + 6'h1;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :144:20]
        remainder <= {1'h0, _subtractor_T_1[32] ? remainder[63:32] : _subtractor_T_1[31:0], remainder[31:0], ~(_subtractor_T_1[32])};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:61:22, :88:37, :89:57, :133:28, :134:{14,24,45,67}, :137:15]
      end
      else if (_GEN_1) begin	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:106:39]
        count <= count + 6'h1;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :123:20]
        remainder <= {_prod_T_4[40:8], count == 6'h2 & neg_out, _prod_T_4[7:0], remainder[31:8]};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :57:20, :61:22, :109:24, :112:76, :113:38, :114:{32,61}, :120:26, :121:{21,34,67}]
      end
      else if (_GEN_0 | _GEN & remainder[31])	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:61:22, :92:{39,57}, :93:{20,27}, :94:17, :101:{39,57}, :102:15]
        remainder <= {34'h0, 32'h0 - result};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:61:22, :89:19, :90:27, :94:17]
      if (_GEN & divisor[31])	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20, :92:{39,57}, :96:{18,25}, :97:15]
        divisor <= _subtractor_T_1;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:60:20, :88:37]
    end
    neg_out <= _GEN_5 ? ((|_decoded_orMatrixOutputs_T_4) ? lhs_sign : lhs_sign != rhs_sign) : ~(_GEN_3 & count == 6'h0 & ~(_subtractor_T_1[32]) & ~isHi) & neg_out;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:54:18, :57:20, :58:17, :81:23, :88:37, :129:{39,50}, :133:28, :146:{24,32,35}, :159:{18,21,28,38}, :164:22, :169:{13,19,46}, src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/chisel3/util/pla.scala:114:{19,36}]
    resHi <= ~_GEN_5 & (_GEN_3 & _GEN_4 | _GEN_2 ? isHi : ~_GEN_0 & resHi);	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:58:17, :59:18, :101:{39,57}, :104:11, :106:50, :124:55, :125:13, :126:13, :129:{39,50}, :138:{17,42}, :140:13, :164:22, :167:11, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:5];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
    initial begin	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
        `INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
        end	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
        state = _RANDOM[3'h0][2:0];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :51:22]
        req_tag = _RANDOM[3'h2][13:9];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16]
        count = _RANDOM[3'h2][19:14];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16, :54:18]
        neg_out = _RANDOM[3'h2][20];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16, :57:20]
        isHi = _RANDOM[3'h2][21];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16, :58:17]
        resHi = _RANDOM[3'h2][22];	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16, :59:18]
        divisor = {_RANDOM[3'h2][31:23], _RANDOM[3'h3][23:0]};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16, :60:20]
        remainder = {_RANDOM[3'h3][31:24], _RANDOM[3'h4], _RANDOM[3'h5][25:0]};	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :60:20, :61:22]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_req_ready = io_req_ready_0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :183:25]
  assign io_resp_valid = io_resp_valid_0;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :182:42]
  assign io_resp_bits_data = result;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :89:19]
  assign io_resp_bits_tag = req_tag;	// @[generators/rocket-chip/src/main/scala/rocket/Multiplier.scala:40:7, :53:16]
endmodule

