// Generated by CIRCT firtool-1.75.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module PhitArbiter_p32_f32_n5_TestHarness_UNIQUIFIED(	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
  input         clock,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
  input         reset,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
  output        io_in_0_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_in_0_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input  [31:0] io_in_0_bits_phit,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output        io_in_1_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_in_1_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input  [31:0] io_in_1_bits_phit,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output        io_in_2_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_in_2_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input  [31:0] io_in_2_bits_phit,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output        io_in_3_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_in_3_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input  [31:0] io_in_3_bits_phit,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output        io_in_4_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_in_4_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input  [31:0] io_in_4_bits_phit,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  input         io_out_ready,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output        io_out_valid,	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
  output [31:0] io_out_bits_phit	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:150:14]
);

  reg              beat;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:161:23]
  reg  [2:0]       chosen_reg;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:162:25]
  wire [2:0]       chosen_prio = io_in_0_valid ? 3'h0 : io_in_1_valid ? 3'h1 : io_in_2_valid ? 3'h2 : io_in_3_valid ? 3'h3 : 3'h4;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:173:77, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire [2:0]       chosen = beat ? chosen_reg : chosen_prio;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:161:23, :162:25, :164:21, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire [7:0]       _GEN = {{io_in_0_valid}, {io_in_0_valid}, {io_in_0_valid}, {io_in_4_valid}, {io_in_3_valid}, {io_in_2_valid}, {io_in_1_valid}, {io_in_0_valid}};	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:167:18]
  wire [7:0][31:0] _GEN_0 = {{io_in_0_bits_phit}, {io_in_0_bits_phit}, {io_in_0_bits_phit}, {io_in_4_bits_phit}, {io_in_3_bits_phit}, {io_in_2_bits_phit}, {io_in_1_bits_phit}, {io_in_0_bits_phit}};	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:168:28]
  wire             _GEN_1 = io_out_ready & _GEN[chosen];	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:164:21, :167:18, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  always @(posedge clock) begin	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
    if (reset)	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
      beat <= 1'h0;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23]
    else if (_GEN_1)	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
      beat <= ~beat & beat - 1'h1;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:161:23, :177:{18,51}]
    if (_GEN_1 & ~beat)	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:161:23, :162:25, :164:27, :176:24, :178:{27,40}, src/main/scala/chisel3/util/Decoupled.scala:51:35]
      chosen_reg <= chosen_prio;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:162:25, src/main/scala/chisel3/util/Mux.scala:50:70]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
    initial begin	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
        `INIT_RANDOM_PROLOG_	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
        beat = _RANDOM[/*Zero width*/ 1'b0][0];	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23]
        chosen_reg = _RANDOM[/*Zero width*/ 1'b0][3:1];	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_0_ready = io_out_ready & beat & chosen_reg == 3'h0;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25, :173:{38,63,77}]
  assign io_in_1_ready = io_out_ready & beat & chosen_reg == 3'h1;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25, :173:{38,63,77}]
  assign io_in_2_ready = io_out_ready & beat & chosen_reg == 3'h2;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25, :173:{38,63,77}]
  assign io_in_3_ready = io_out_ready & beat & chosen_reg == 3'h3;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25, :173:{38,63,77}]
  assign io_in_4_ready = io_out_ready & beat & chosen_reg == 3'h4;	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :162:25, :173:{38,63,77}]
  assign io_out_valid = _GEN[chosen];	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :164:21, :167:18]
  assign io_out_bits_phit = beat ? _GEN_0[chosen] : {29'h0, chosen};	// @[generators/testchipip/src/main/scala/serdes/Serdes.scala:148:7, :161:23, :164:21, :168:28, :169:22]
endmodule

