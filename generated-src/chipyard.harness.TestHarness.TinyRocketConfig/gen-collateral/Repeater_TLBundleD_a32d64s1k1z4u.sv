// Generated by CIRCT firtool-1.75.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module Repeater_TLBundleD_a32d64s1k1z4u(	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
  input         clock,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
  input         reset,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
  input         io_repeat,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output        io_enq_ready,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input         io_enq_valid,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input  [2:0]  io_enq_bits_opcode,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input  [1:0]  io_enq_bits_param,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input  [3:0]  io_enq_bits_size,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input         io_enq_bits_sink,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input         io_enq_bits_denied,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input  [63:0] io_enq_bits_data,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input         io_enq_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  input         io_deq_ready,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output        io_deq_valid,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output [2:0]  io_deq_bits_opcode,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output [1:0]  io_deq_bits_param,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output [3:0]  io_deq_bits_size,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output        io_deq_bits_sink,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output        io_deq_bits_denied,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output [63:0] io_deq_bits_data,	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
  output        io_deq_bits_corrupt	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:13:14]
);

  reg         full;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:20:21]
  reg  [2:0]  saved_opcode;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg  [1:0]  saved_param;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg  [3:0]  saved_size;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg         saved_sink;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg         saved_denied;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg  [63:0] saved_data;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  reg         saved_corrupt;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
  wire        io_deq_valid_0 = io_enq_valid | full;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:20:21, :24:32]
  wire        io_enq_ready_0 = io_deq_ready & ~full;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:20:21, :25:{32,35}]
  wire        _GEN = io_enq_ready_0 & io_enq_valid & io_repeat;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:25:32, :29:21, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  always @(posedge clock) begin	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
    if (reset)	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      full <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:20:21]
    else	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      full <= ~(io_deq_ready & io_deq_valid_0 & ~io_repeat) & (_GEN | full);	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:20:21, :24:32, :29:{21,36,43}, :30:{21,24,36,43}, src/main/scala/chisel3/util/Decoupled.scala:51:35]
    if (_GEN) begin	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:29:21, src/main/scala/chisel3/util/Decoupled.scala:51:35]
      saved_opcode <= io_enq_bits_opcode;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_param <= io_enq_bits_param;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_size <= io_enq_bits_size;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_sink <= io_enq_bits_sink;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_denied <= io_enq_bits_denied;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_data <= io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
      saved_corrupt <= io_enq_bits_corrupt;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:21:18]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
    initial begin	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
        `INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
        end	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
        full = _RANDOM[2'h0][0];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21]
        saved_opcode = _RANDOM[2'h0][3:1];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_param = _RANDOM[2'h0][5:4];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_size = _RANDOM[2'h0][9:6];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_sink = _RANDOM[2'h0][11];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_denied = _RANDOM[2'h0][12];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_data = {_RANDOM[2'h0][31:13], _RANDOM[2'h1], _RANDOM[2'h2][12:0]};	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18]
        saved_corrupt = _RANDOM[2'h2][13];	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :21:18]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = io_enq_ready_0;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :25:32]
  assign io_deq_valid = io_deq_valid_0;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :24:32]
  assign io_deq_bits_opcode = full ? saved_opcode : io_enq_bits_opcode;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_param = full ? saved_param : io_enq_bits_param;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_size = full ? saved_size : io_enq_bits_size;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_sink = full ? saved_sink : io_enq_bits_sink;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_denied = full ? saved_denied : io_enq_bits_denied;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_data = full ? saved_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
  assign io_deq_bits_corrupt = full ? saved_corrupt : io_enq_bits_corrupt;	// @[generators/rocket-chip/src/main/scala/util/Repeater.scala:10:7, :20:21, :21:18, :26:21]
endmodule

